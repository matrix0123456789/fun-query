C:37:"PHPUnit\Runner\DefaultTestResultCache":3370:{a:2:{s:7:"defects";a:39:{s:21:"FlatNodeTest::testAll";i:4;s:26:"PipelineNodeTest::testFlat";i:4;s:23:"FlatNodeTest::testEmpty";i:4;s:45:"PipelineNodeTest::testGeneratorMultiplePasses";i:4;s:27:"PipelineNodeTest::testCount";i:4;s:36:"PipelineNodeTest::testCountGenerator";i:4;s:28:"PipelineNodeTest::testReduce";i:3;s:36:"PipelineNodeTest::testReduceWithInit";i:3;s:33:"PipelineNodeTest::testReduceEmpty";i:3;s:41:"PipelineNodeTest::testReduceEmptyWithInit";i:3;s:26:"ArrayNodeTest::testForEach";i:4;s:26:"ArrayNodeTest::testToArray";i:4;s:35:"ArrayNodeTest::testFactoryConstruct";i:4;s:23:"FilterNodeTest::testAll";i:4;s:42:"IteratorAggregateNodeTest::test__construct";i:4;s:38:"IteratorAggregateNodeTest::testFactory";i:4;s:33:"IteratorNodeTest::test__construct";i:4;s:29:"IteratorNodeTest::testFactory";i:4;s:20:"MapNodeTest::testAll";i:4;s:28:"PipelineNodeTest::testSample";i:4;s:26:"PipelineNodeTest::testJson";i:4;s:30:"PipelineNodeTest::testSomeTrue";i:4;s:31:"PipelineNodeTest::testSomeFalse";i:4;s:31:"PipelineNodeTest::testSomeEmpty";i:4;s:33:"PipelineNodeTest::testSomeNoEmpty";i:4;s:27:"PipelineNodeTest::testSlice";i:4;s:31:"PipelineNodeTest::testGenerator";i:4;s:26:"PipelineNodeTest::testEach";i:4;s:32:"PipelineNodeTest::testMapOmmited";i:3;s:22:"SliceNodeTest::testAll";i:4;s:28:"SliceNodeTest::testGenerator";i:4;s:29:"SliceNodeTest::testGenerator2";i:4;s:21:"SortNodeTest::testAll";i:4;s:25:"DistinctNodeTest::testAll";i:4;s:30:"PipelineNodeTest::testDistinct";i:4;s:34:"PipelineNodeTest::testToAssocArray";i:3;s:41:"PipelineNodeTest::testToAssocArrayWithMap";i:3;s:43:"PipelineNodeTest::testToAssocArrayDuplicate";i:3;s:32:"PipelineNodeTest::testFilterSkip";i:3;}s:5:"times";a:39:{s:21:"FlatNodeTest::testAll";d:0;s:26:"ArrayNodeTest::testForEach";d:0.004;s:26:"ArrayNodeTest::testToArray";d:0;s:35:"ArrayNodeTest::testFactoryConstruct";d:0;s:23:"FilterNodeTest::testAll";d:0;s:42:"IteratorAggregateNodeTest::test__construct";d:0;s:38:"IteratorAggregateNodeTest::testFactory";d:0;s:33:"IteratorNodeTest::test__construct";d:0.001;s:29:"IteratorNodeTest::testFactory";d:0;s:20:"MapNodeTest::testAll";d:0;s:28:"PipelineNodeTest::testSample";d:0;s:26:"PipelineNodeTest::testJson";d:0;s:30:"PipelineNodeTest::testSomeTrue";d:0;s:31:"PipelineNodeTest::testSomeFalse";d:0;s:31:"PipelineNodeTest::testSomeEmpty";d:0;s:33:"PipelineNodeTest::testSomeNoEmpty";d:0;s:27:"PipelineNodeTest::testSlice";d:0;s:31:"PipelineNodeTest::testGenerator";d:0;s:26:"PipelineNodeTest::testEach";d:0;s:22:"SliceNodeTest::testAll";d:0;s:28:"SliceNodeTest::testGenerator";d:0;s:29:"SliceNodeTest::testGenerator2";d:0;s:21:"SortNodeTest::testAll";d:0;s:26:"PipelineNodeTest::testFlat";d:0;s:23:"FlatNodeTest::testEmpty";d:0;s:45:"PipelineNodeTest::testGeneratorMultiplePasses";d:0;s:27:"PipelineNodeTest::testCount";d:0;s:36:"PipelineNodeTest::testCountGenerator";d:0;s:28:"PipelineNodeTest::testReduce";d:0;s:36:"PipelineNodeTest::testReduceWithInit";d:0;s:33:"PipelineNodeTest::testReduceEmpty";d:0.001;s:41:"PipelineNodeTest::testReduceEmptyWithInit";d:0;s:32:"PipelineNodeTest::testMapOmmited";d:0;s:25:"DistinctNodeTest::testAll";d:0;s:30:"PipelineNodeTest::testDistinct";d:0;s:34:"PipelineNodeTest::testToAssocArray";d:0;s:41:"PipelineNodeTest::testToAssocArrayWithMap";d:0;s:43:"PipelineNodeTest::testToAssocArrayDuplicate";d:0;s:32:"PipelineNodeTest::testFilterSkip";d:0;}}}